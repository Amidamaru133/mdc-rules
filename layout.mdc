---
title: Layout
---

## Основные принципы

1. **Методология БЭМ**
   - Блоки, Элементы, Модификаторы.
   - Именование: `.block__element--modifier`.
   - Никаких каскадов по тегам или id.

2. **Bootstrap как фундамент**
   - Использовать 12-колоночную сетку: `.row > .col-{breakpoint}-{size}`.
   - Не переопределять стили Bootstrap напрямую — создавать собственные модификаторы.
   - Подключать только нужные компоненты через SCSS (переменные `$enable-*`).

3. **CSS-переменные (Custom Properties)**
   - Определять в `:root` все дизайн-токены: цвета, отступы, шрифты.
   - Использовать `var(--name, fallback)` везде, где возможно.
   - Переопределять переменные в медиа-запросах для адаптивности.
   - Основные стили помещай в файл style.css, который находится по пути wwwroot/css/, если какие то отдельные старницы требуют дополнительной отдельной логики, то создавай по пути wwwroot/css/ дополинтельные файлы.
   - Стараться стили описывать в .css файле а не в теге <style></style> на странице.

4. **Адаптивность**
   - Mobile-first: стили сначала для `xs`, затем расширять `@media (min-width: ...)`.
   - Breakpoints Bootstrap: `576, 768, 992, 1200, 1400 px`.
   - Картинки: `img-fluid`, `srcset`, `sizes`.
   - Текст: использовать `clamp()` или переменные типографики.

5. **Работа с Figma**
   - Нужно в точности повторять макет ссылку на которую тебе дают.
   - При использовании картинок всегда пытаться их скачать, если не получилось то все равно создавать теги <img> с осмысленными путями к файлам, если получилось то сохарнять картинки в паке wwwroot/images/
   

## Структура проекта

- Используй семантическую разметку HTML5
- Придерживайся принципов доступности (accessibility)
- Оптимизируй производительность CSS
- Следуй принципам Progressive Enhancement